// Code generated by go-swagger; DO NOT EDIT.

package ntnxv3models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ResourceUtilizationSpec Resource Utilization Specification
//
// specify the limits and units for a resource type
//
// swagger:model resource_utilization_spec
type ResourceUtilizationSpec struct {

	// The resource consumption limit
	Limit int64 `json:"limit,omitempty"`

	// The type of resource (i.e. storage, CPUs)
	// Required: true
	ResourceType *string `json:"resource_type"`
}

// Validate validates this resource utilization spec
func (m *ResourceUtilizationSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResourceType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResourceUtilizationSpec) validateResourceType(formats strfmt.Registry) error {

	if err := validate.Required("resource_type", "body", m.ResourceType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this resource utilization spec based on context it is used
func (m *ResourceUtilizationSpec) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ResourceUtilizationSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceUtilizationSpec) UnmarshalBinary(b []byte) error {
	var res ResourceUtilizationSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
